##### secret creation
secret:
  create: true
  name: lldap-credentials
  lldapJwtSecret: "placeholder"
  lldapUserName: "placeholder"
  lldapUserPass: "placeholder"
  lldapBaseDn: "dc=homelab,dc=local"

##### pvc
persistence:
  enabled: true
  storageClassName: ""
  storageSize: "100Mi"
  accessMode: "ReadWriteOnce"

  # in case the StorageClass used does not automatically provision volumes,
  # you can specify a local path for manual mounting here like for example /mnt/data/lldap
  # if the StorageClass supports automatic provisioning, leave this field empty.
  localPath: "" # Local filesystem path for storage, used if 'local-path' is the SC.

  # if manualProvision is set to true, a persistentVolume is created with helm
  # if the StorageClass used supports automatic provisioning, this should be set to false.
  # and if it does not supports automatic provisioning, set to true. Default is false
  manualProvision: false

extraVolumes: []

extraVolumeMounts: []

##### deployment
# hour zone
env:
  TZ: "EET"
  GID: "1001"
  UID: "1001"

extraEnv: []

resources:
  limits:
    cpu: 100m
    memory: 100Mi
  requests:
    cpu: 50m
    memory: 50M

nodeSelector: {}

tolerations: []

affinity: {}

replicaCount: 1

image:
  repository: "nitnelave/lldap"
  tag: "v0.6.1"
  pullPolicy: "IfNotPresent"

#### service this is unique service, so no enabled is added as if not it wont work
service:
  webui:
    name: lldap-service
    type: ClusterIP
    ports:
      name: "17170"
      port: 17170
      targetPort: 17170
  ldap:
    name: lldap
    type: LoadBalancer
    ports:
      name: "3890"
      port: 3890
      targetPort: 3890

#####ingress
ingress:
  ingressClassName: "nginx"
  enabled: true
  name: lldap-web-ingress
  annotations:
    cert-manager.io/cluster-issuer: "acme-issuer"
  labels: {}
  hosts:
    host: "placeholder.test.com"
    paths:
      path: "/"
      pathType: "Prefix"
  tls:
    - secretName: lldap-tls-cert
      hosts:
        - "placeholder.test.com"
